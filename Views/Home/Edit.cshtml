@model Digital_Diary.Models.Ddiary

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Ddiary</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
    
            <div class="form-group">
                @Html.LabelFor(model => model.Written, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Written, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Written, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.imagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <dd>
                        <img src="@Url.Content(Model.imagePath)" width="300" height="300" />
                    </dd>
                    </div>
                   <div>
                    <dd>
                        <input type="file" name="ImageFile" />
                    </dd>
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
    
          
    
            <div>

                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "High importance ",
                        Value = "1"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Moderate importance ",
                        Value = "2",
                        Selected = true
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = " Less importance ",
                        Value = "3"
                    });
                }

                @Html.DropDownListFor(model => model.Status, listItems, " Select importance ")
            </div>
    
           
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "List")
    </div>
</body>
</html>
